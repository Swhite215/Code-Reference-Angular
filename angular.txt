Angular Fundamentals
    1. What is Angular?
        a. Framework
            - Allows for the creation of reactive Single-Page-Applications (SPA)
        b. Versions Angular 1  - Angular 2 - Angular 7
            - Angular 1 is old, Angular 2 is a rewrite, Angular 7 is robust tool set
    2. Angular CLI
        a. Overview
            - CLI for building projects
        b. Commands
            - ng new name
            - ng serve
            - ng generate c components/name
    3. Components & Data Bindings
        a. @Component
            - selector = html binding name, app-name, .class, #id, [attribute]
            - template = html file or direct html
            - styleUrls = array of stylesheets
            - styles - array of style strings
        b. Databinding
            - Communication between TypeScript code and Template
            - String Interpolation
                - {{ data }}
            - Property Binding
                - [property]="data"
            - Event Binding
                - (event)="method"
                - (event)="method($event = data)"
                - in component method
                    - (<HTMLInputElement>event.target).value
            - Two Way Binding
                - [(ngMode)]="data"
    4. Directives
        a. What is a directive?
            - Directives are instructions in the DOM
        b. Types
            - Components
                - <app-name></app-name>
            - Structural
                -ngIf, dynamically render content
                    - *ngIf="boolean expression"
                    - *ngIf="boolean expression; else name" with <ng-template #name><p>CONTENT</p></ng-template>
                -ngFor, dynamically render multiple components
                    - *ngFor="let something of array"
                    - *ngFor="let something of array; let i = index"
            - Attribute
                - [(ngModel)]="stateValue"
                - ngStyle, dynamically apply styles
                    - [ngStyle]="{styleName: 'value' | method() | condition}"
                - ngClass, dynamically apply classes
                    - [ngClass]="{className: boolean expression}"
    5. Services & Dependency Injection
    6. Routing
    7. Observables
    8. Forms
    9. Pipes
    10. HTTP
    11. Authentication
    12. Optimizations & NgModules
    13. Deployment
    14. Animations and Testing
    15. Typescript
        